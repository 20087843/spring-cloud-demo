server:
  port: 8080

spring:
  profiles:
    active: dev

  security:
    user:
      name: ${USER_SERVICE_USERNAME:user}
      password: ${USER_SERVICE_PASSWORD:user}
    oauth2:
      client:
        clientId: user-service
        clientSecret: ${spring.security.user.password}
        accessTokenUri: http://${authserver.hostname}:${authserver.port}${authserver.contextPath}/oauth/token
        grant-type: client_credentials
        scope: server

  jackson: # jackson json 格式化工具配置
    serialization:
      indent_output: true #格式化输出
      fail_on_empty_beans: false #忽略无法转换的对象
    defaultPropertyInclusion: NON_EMPTY #设置空如何序列化
    deserialization:
      fail_on_unknown_properties: false #允许对象忽略json中不存在的属性
    parser:
      allow_unquoted_control_chars: true #允许出现特殊字符和转义符
      allow_single_quotes: true #允许出现单引号

  zipkin:
    enabled: true # 启用 Zipkin 链路追踪
    locator:
      discovery:
        enabled: true  # 通过注册中心发现服务 ID
    compression:
      enabled: true # 压缩数据
    sender:
      type: rabbit
    rabbitmq:
      topic: zipkin

  sleuth:
    enabled: true
    sampler:
      probability: 1.0
    web:
      client:
        enabled: true

eureka: # 注册中心配置
  instance:
    hostname: register-center
    prefer-ip-address: true
    metadata-map:
      user.name: ${spring.security.user.name}
      user.password: ${spring.security.user.password}
  client:
    service-url:
      defaultZone: http://${REGISTER_CENTER_USERNAME:register}:${REGISTER_CENTER_PASSWORD:register}@localhost:8860/eureka/

management:
  endpoints:
    web:
      exposure:
        include: '*'
  server:
    servlet:
      context-path: /

user: # 应用测试数据
  name: Smilly
  identity: 21011220040804555X
  age: 26
  sex: male